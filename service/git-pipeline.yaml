apiVersion: tekton.dev/v1
kind: Pipeline
metadata:
  annotations:
    manifestival: new
  # Template
  name: hive-service-git-pipeline
spec:
  params:
    - name: gitRepository
      type: string
      description: Git repository that hosts the project
      default: ""
    - name: gitRevision
      type: string
      description: Git revision to build
      default: "main"
    - name: contextDir
      type: string
      description: Path where the project is located in the repository
      default: ""
    - name: imageName
      type: string
      description: The name of the image to build.
    - name: registry
      type: string
      description: The registry to push the image to. <registry>/<namespace>
    - name: builderImage
      type: string
      description: Builder image to be used.
    - name: buildEnvs
      type: array
      description: Environment variables to set during build time.
    - name: groupId
      type: string
      description: Group ID to set on the built image.
      default: "1000"
    - name: userId
      type: string
      description: User ID to set on the built image.
      default: "1000"
    - name: knativeImage
      type: string
      description: Knative client image to use for deployment.
      default: "gcr.io/knative-releases/knative.dev/client/cmd/kn:latest"
    - name: knativeNamespace
      type: string
      description: Namespace to deploy the Knative service to.
      default: "default"
    - name: knativeName
      type: string
      description: Name of the Knative service to create or update.
      default: ""
    - name: knativeServiceAccount
      type: string
      description: Service account to use for the Knative service.
      default: "default"
    - name: knativeType
      type: string
      description: Type of Knative resource to create (e.g., service, route).
      default: "service"
    - name: knativeOperation
      type: string
      description: Knative operation to perform (e.g., create, update).
      default: "create"
    - name: knativeArgs
      type: array
      description: Additional arguments to pass to the 'kn' CLI during deployment.
      default: []
  tasks:
    - name: fetch-sources
      params:
        - name: url
          value: $(params.gitRepository)
        - name: revision
          value: $(params.gitRevision)
      taskRef:
        params:
          - name: kind
            value: task
          - name: name
            value: git-clone
          - name: version
            value: "0.5"
        resolver: hub
      workspaces:
        - name: output
          workspace: source-workspace
    - name: build-and-push
      runAfter:
          - fetch-sources
      params:
        - name: APP_IMAGE
          value: "$(params.registry)/$(params.imageName)"
        - name: SOURCE_SUBPATH
          value: "$(params.contextDir)"
        - name: CNB_BUILDER_IMAGE
          value: "$(params.builderImage)"
        - name: CNB_ENV_VARS
          value: "$(params.buildEnvs[*])"
        - name: CNB_GROUP_ID
          value: "$(params.groupId)"
        - name: CNB_USER_ID
          value: "$(params.userId)"
      taskRef:
        params:
          - name: kind
            value: task
          - name: name
            value: buildpacks-phases
          - name: version
            value: "0.3"
        resolver: hub
      workspaces:
        - name: source
          workspace: source-workspace
        - name: cache
          workspace: cache-workspace
    - name: display-results
      params:
        - name: APP_IMAGE
          value: "$(params.registry)/$(params.imageName)"
        - name: APP_IMAGE_DIGEST
          value: "$(tasks.build-and-push.results.APP_IMAGE_DIGEST)"
      taskSpec:
        params:
          - name: APP_IMAGE
            type: string
            description: The name of the image built.
          - name: APP_IMAGE_DIGEST
            type: string
            description: The digest of the image built.
        steps:
          - name: print
            image: docker.io/library/bash:5.1.4@sha256:b208215a4655538be652b2769d82e576bc4d0a2bb132144c060efc5be8c3f5d6
            script: |
              #!/usr/bin/env bash
              set -e
              echo "Built app image: $(params.APP_IMAGE)"
              echo "Digest of created app image: $(params.APP_IMAGE_DIGEST)"
      runAfter:
        - build-and-push
    - name: deploy-to-knative
      params:
        - name: knativeImage
          value: "$(params.knativeImage)"
        - name: knativeType
          value: "$(params.knativeType)"
        - name: knativeOperation
          value: "$(params.knativeOperation)"
        - name: knativeName
          value: "$(params.knativeName)"
        - name: knativeNamespace
          value: "$(params.knativeNamespace)"
        - name: knativeServiceAccount
          value: "$(params.knativeServiceAccount)"
        - name: APP_IMAGE
          value: "$(params.registry)/$(params.imageName)"
        - name: APP_IMAGE_DIGEST
          value: "$(tasks.build-and-push.results.APP_IMAGE_DIGEST)"
        - name: ARGS
          value:
            - "$(params.knativeArgs[*]"
      taskSpec:
        params:
          - name: knativeImage
            type: string
            default: "gcr.io/knative-releases/knative.dev/client/cmd/kn:latest"
          - name: APP_IMAGE
            type: string
          - name: APP_IMAGE_DIGEST
            type: string
          - name: knativeType
            type: string
          - name: knativeOperation
            type: string
          - name: knativeName
            type: string
          - name: knativeNamespace
            type: string
          - name: knativeServiceAccount
            type: string
          - name: knativeArgs
            type: array
            default: []
        steps:
          - name: kn
            image: $(params.knativeImage)
            args:
              - "$(params.knativeType)"
              - "$(params.knativeOperation)"
              - "$(params.knativeName)"
              - "--namespace=$(params.knativeNamespace)"
              - "--service-account=$(params.knativeServiceAccount)"
              - "--image=$(params.APP_IMAGE)@$(params.APP_IMAGE_DIGEST)"
              - "$(params.knativeArgs[*])"
      runAfter:
        - display-results
      workspaces:
        - name: source
          workspace: source-workspace
  workspaces:
    - name: source-workspace
      description: Directory where source code is located.
    - name: cache-workspace
      description: Directory where build cache is stored.
